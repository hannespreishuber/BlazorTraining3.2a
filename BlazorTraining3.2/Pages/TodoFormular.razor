@page "/todo/{id:int}"
@using  BlazorTraining3._2.Data
@inject TodoDBContext db
<h3>TodoFormular</h3>
<EditForm Model="Aufgabe" OnSubmit="speichern">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">ID</label>
        <div class="col-sm-10">
            <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@Aufgabe.ID">
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Text</label>
        <div class="col-sm-10">
            <BootstrapInputText class="form-control" @bind-Value="Aufgabe.Text"></BootstrapInputText>
            <ValidationMessage For="()=>Aufgabe.Text"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Datum</label>
        <div class="col-sm-10">
            <InputDate class="form-control" @bind-Value="Aufgabe.Datum"></InputDate>
            <ValidationMessage For="()=>Aufgabe.Datum"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Erledigt</label>
        <div class="col-sm-10">
            <InputCheckbox class="form-control" @bind-Value="Aufgabe.Erledigt"></InputCheckbox>
            <ValidationMessage For="()=>Aufgabe.Erledigt"></ValidationMessage>
        </div>
    </div>
    <button type="submit" class="btn btn-outline-primary">save</button> 
    <ValidationSummary></ValidationSummary>
</EditForm>
@code {
    [Parameter]
    public int id { get; set; }

    public Aufgaben Aufgabe { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Aufgabe = db.Aufgabens.Find(id);

    }
    void speichern()
    {
        db.Aufgabens.Attach(Aufgabe);
        db.SaveChanges();

    }

}
